{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Argo-cd like GitDevOps Continuous Development platform for docker swarm.",
        "title": "Meltcd API",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "https://github.com/meltred/meltcd/blob/main/LICENSE"
        },
        "version": "0.6"
    },
    "host": "localhost:11771",
    "basePath": "/api",
    "paths": {
        "/": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "General"
                ],
                "summary": "Check server status",
                "responses": {}
            }
        },
        "/apps": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": [],
                        "cookies": []
                    }
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Get a list all applications created",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.AppList"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": [],
                        "cookies": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Update an application",
                "parameters": [
                    {
                        "description": "Application body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/application.Application"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": [],
                        "cookies": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Create a new application",
                "parameters": [
                    {
                        "description": "Application body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/application.Application"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalResponse"
                        }
                    }
                }
            }
        },
        "/apps/{app_name}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": [],
                        "cookies": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Get details of an application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/application.Application"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": [],
                        "cookies": []
                    }
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Remove an application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalResponse"
                        }
                    }
                }
            }
        },
        "/apps/{app_name}/recreate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": [],
                        "cookies": []
                    }
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Recreate application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalResponse"
                        }
                    }
                }
            }
        },
        "/apps/{app_name}/refresh": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": [],
                        "cookies": []
                    }
                ],
                "tags": [
                    "Apps"
                ],
                "summary": "Refresh/Synchronize an application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "tags": [
                    "General"
                ],
                "summary": "Login user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/logs": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "General"
                ],
                "summary": "Get Logs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/logs/live": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "General"
                ],
                "summary": "Get Live Logs using SSE",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/repo": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": [],
                        "cookies": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Repo"
                ],
                "summary": "Get a list all repositories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repo.ListData"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": [],
                        "cookies": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Repo"
                ],
                "summary": "Update a repository",
                "parameters": [
                    {
                        "description": "Repository details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repo.PrivateRepoDetails"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": [],
                        "cookies": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Repo"
                ],
                "summary": "Add a new repository",
                "parameters": [
                    {
                        "description": "Repository details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repo.PrivateRepoDetails"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": [],
                        "cookies": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Repo"
                ],
                "summary": "Remove a repository",
                "parameters": [
                    {
                        "description": "Repository url",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/repo.RemovePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app.GlobalResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": [],
                        "cookies": []
                    }
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all the users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.AllUsers"
                        }
                    }
                }
            }
        },
        "/users/current": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": [],
                        "cookies": []
                    }
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get username of current logged-in user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/users/{username}/password": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": [],
                        "cookies": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Change password of user",
                "parameters": [
                    {
                        "description": "Change password body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ChangePasswordBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/users/{username}/username": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": [],
                        "cookies": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Change username of user",
                "parameters": [
                    {
                        "description": "Change username body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ChangeUsernameBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ChangePasswordBody": {
            "type": "object",
            "properties": {
                "currentPassword": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                }
            }
        },
        "api.ChangeUsernameBody": {
            "type": "object",
            "properties": {
                "newUsername": {
                    "type": "string"
                }
            }
        },
        "app.GlobalResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "application.Application": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "health": {
                    "$ref": "#/definitions/application.Health"
                },
                "health_status": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_synced_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "refresh_timer": {
                    "description": "Timer to check for Sync format of \"3m50s\"",
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/application.Source"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "application.Health": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "Healthy",
                "Progressing",
                "Degraded",
                "Suspended"
            ]
        },
        "application.Source": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                },
                "repoURL": {
                    "type": "string"
                },
                "targetRevision": {
                    "type": "string"
                }
            }
        },
        "auth.AllUsers": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/auth.User"
                    }
                }
            }
        },
        "auth.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "lastLoggedIn": {
                    "type": "string"
                },
                "passwordHash": {
                    "description": "hash passwords",
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/auth.UserRole"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "auth.UserRole": {
            "type": "string",
            "enum": [
                "admin",
                "general"
            ],
            "x-enum-varnames": [
                "Admin",
                "General"
            ]
        },
        "core.AppList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/core.AppStatus"
                    }
                }
            }
        },
        "core.AppStatus": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "health": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_synced_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "repo.ListData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/repository.RepoData"
                    }
                }
            }
        },
        "repo.PrivateRepoDetails": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "repo.RemovePayload": {
            "type": "object",
            "properties": {
                "repo": {
                    "type": "string"
                }
            }
        },
        "repository.RepoData": {
            "type": "object",
            "properties": {
                "reachable": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "Meltcd Docs",
        "url": "https://cd.meltred.tech/docs"
    }
}